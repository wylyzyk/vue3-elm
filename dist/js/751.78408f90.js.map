{"version":3,"file":"js/751.78408f90.js","mappings":"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","sources":["webpack://elm/./node_modules/.pnpm/showdown@1.6.4/node_modules/showdown/dist/showdown.js"],"sourcesContent":[";/*! showdown 06-02-2017 */\r\n(function(){\r\n/**\n * Created by Tivie on 13-07-2015.\n */\n\nfunction getDefaultOpts (simple) {\n  'use strict';\n\n  var defaultOptions = {\n    omitExtraWLInCodeBlocks: {\n      defaultValue: false,\n      describe: 'Omit the default extra whiteline added to code blocks',\n      type: 'boolean'\n    },\n    noHeaderId: {\n      defaultValue: false,\n      describe: 'Turn on/off generated header id',\n      type: 'boolean'\n    },\n    prefixHeaderId: {\n      defaultValue: false,\n      describe: 'Specify a prefix to generated header ids',\n      type: 'string'\n    },\n    ghCompatibleHeaderId: {\n      defaultValue: false,\n      describe: 'Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)',\n      type: 'boolean'\n    },\n    headerLevelStart: {\n      defaultValue: false,\n      describe: 'The header blocks level start',\n      type: 'integer'\n    },\n    parseImgDimensions: {\n      defaultValue: false,\n      describe: 'Turn on/off image dimension parsing',\n      type: 'boolean'\n    },\n    simplifiedAutoLink: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM autolink style',\n      type: 'boolean'\n    },\n    excludeTrailingPunctuationFromURLs: {\n      defaultValue: false,\n      describe: 'Excludes trailing punctuation from links generated with autoLinking',\n      type: 'boolean'\n    },\n    literalMidWordUnderscores: {\n      defaultValue: false,\n      describe: 'Parse midword underscores as literal underscores',\n      type: 'boolean'\n    },\n    strikethrough: {\n      defaultValue: false,\n      describe: 'Turn on/off strikethrough support',\n      type: 'boolean'\n    },\n    tables: {\n      defaultValue: false,\n      describe: 'Turn on/off tables support',\n      type: 'boolean'\n    },\n    tablesHeaderId: {\n      defaultValue: false,\n      describe: 'Add an id to table headers',\n      type: 'boolean'\n    },\n    ghCodeBlocks: {\n      defaultValue: true,\n      describe: 'Turn on/off GFM fenced code blocks support',\n      type: 'boolean'\n    },\n    tasklists: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM tasklist support',\n      type: 'boolean'\n    },\n    smoothLivePreview: {\n      defaultValue: false,\n      describe: 'Prevents weird effects in live previews due to incomplete input',\n      type: 'boolean'\n    },\n    smartIndentationFix: {\n      defaultValue: false,\n      description: 'Tries to smartly fix indentation in es6 strings',\n      type: 'boolean'\n    },\n    disableForced4SpacesIndentedSublists: {\n      defaultValue: false,\n      description: 'Disables the requirement of indenting nested sublists by 4 spaces',\n      type: 'boolean'\n    },\n    simpleLineBreaks: {\n      defaultValue: false,\n      description: 'Parses simple line breaks as <br> (GFM Style)',\n      type: 'boolean'\n    },\n    requireSpaceBeforeHeadingText: {\n      defaultValue: false,\n      description: 'Makes adding a space between `#` and the header text mandatory (GFM Style)',\n      type: 'boolean'\n    },\n    ghMentions: {\n      defaultValue: false,\n      description: 'Enables github @mentions',\n      type: 'boolean'\n    },\n    ghMentionsLink: {\n      defaultValue: 'https://github.com/{u}',\n      description: 'Changes the link generated by @mentions. Only applies if ghMentions option is enabled.',\n      type: 'string'\n    },\n    encodeEmails: {\n      defaultValue: true,\n      description: 'Encode e-mail addresses through the use of Character Entities, transforming ASCII e-mail addresses into its equivalent decimal entities',\n      type: 'boolean'\n    }\n  };\n  if (simple === false) {\n    return JSON.parse(JSON.stringify(defaultOptions));\n  }\n  var ret = {};\n  for (var opt in defaultOptions) {\n    if (defaultOptions.hasOwnProperty(opt)) {\n      ret[opt] = defaultOptions[opt].defaultValue;\n    }\n  }\n  return ret;\n}\n\nfunction allOptionsOn () {\n  'use strict';\n  var options = getDefaultOpts(true),\n      ret = {};\n  for (var opt in options) {\n    if (options.hasOwnProperty(opt)) {\n      ret[opt] = true;\n    }\n  }\n  return ret;\n}\n\r\n/**\n * Created by Tivie on 06-01-2015.\n */\n\n// Private properties\nvar showdown = {},\n    parsers = {},\n    extensions = {},\n    globalOptions = getDefaultOpts(true),\n    setFlavor = 'vanilla',\n    flavor = {\n      github: {\n        omitExtraWLInCodeBlocks:              true,\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        disableForced4SpacesIndentedSublists: true,\n        simpleLineBreaks:                     true,\n        requireSpaceBeforeHeadingText:        true,\n        ghCompatibleHeaderId:                 true,\n        ghMentions:                           true\n      },\n      original: {\n        noHeaderId:                           true,\n        ghCodeBlocks:                         false\n      },\n      ghost: {\n        omitExtraWLInCodeBlocks:              true,\n        parseImgDimensions:                   true,\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        smoothLivePreview:                    true,\n        simpleLineBreaks:                     true,\n        requireSpaceBeforeHeadingText:        true,\n        ghMentions:                           false,\n        encodeEmails:                         true\n      },\n      vanilla: getDefaultOpts(true),\n      allOn: allOptionsOn()\n    };\n\n/**\n * helper namespace\n * @type {{}}\n */\nshowdown.helper = {};\n\n/**\n * TODO LEGACY SUPPORT CODE\n * @type {{}}\n */\nshowdown.extensions = {};\n\n/**\n * Set a global option\n * @static\n * @param {string} key\n * @param {*} value\n * @returns {showdown}\n */\nshowdown.setOption = function (key, value) {\n  'use strict';\n  globalOptions[key] = value;\n  return this;\n};\n\n/**\n * Get a global option\n * @static\n * @param {string} key\n * @returns {*}\n */\nshowdown.getOption = function (key) {\n  'use strict';\n  return globalOptions[key];\n};\n\n/**\n * Get the global options\n * @static\n * @returns {{}}\n */\nshowdown.getOptions = function () {\n  'use strict';\n  return globalOptions;\n};\n\n/**\n * Reset global options to the default values\n * @static\n */\nshowdown.resetOptions = function () {\n  'use strict';\n  globalOptions = getDefaultOpts(true);\n};\n\n/**\n * Set the flavor showdown should use as default\n * @param {string} name\n */\nshowdown.setFlavor = function (name) {\n  'use strict';\n  if (!flavor.hasOwnProperty(name)) {\n    throw Error(name + ' flavor was not found');\n  }\n  var preset = flavor[name];\n  setFlavor = name;\n  for (var option in preset) {\n    if (preset.hasOwnProperty(option)) {\n      globalOptions[option] = preset[option];\n    }\n  }\n};\n\n/**\n * Get the currently set flavor\n * @returns {string}\n */\nshowdown.getFlavor = function () {\n  'use strict';\n  return setFlavor;\n};\n\n/**\n * Get the options of a specified flavor. Returns undefined if the flavor was not found\n * @param {string} name Name of the flavor\n * @returns {{}|undefined}\n */\nshowdown.getFlavorOptions = function (name) {\n  'use strict';\n  if (flavor.hasOwnProperty(name)) {\n    return flavor[name];\n  }\n};\n\n/**\n * Get the default options\n * @static\n * @param {boolean} [simple=true]\n * @returns {{}}\n */\nshowdown.getDefaultOptions = function (simple) {\n  'use strict';\n  return getDefaultOpts(simple);\n};\n\n/**\n * Get or set a subParser\n *\n * subParser(name)       - Get a registered subParser\n * subParser(name, func) - Register a subParser\n * @static\n * @param {string} name\n * @param {function} [func]\n * @returns {*}\n */\nshowdown.subParser = function (name, func) {\n  'use strict';\n  if (showdown.helper.isString(name)) {\n    if (typeof func !== 'undefined') {\n      parsers[name] = func;\n    } else {\n      if (parsers.hasOwnProperty(name)) {\n        return parsers[name];\n      } else {\n        throw Error('SubParser named ' + name + ' not registered!');\n      }\n    }\n  }\n};\n\n/**\n * Gets or registers an extension\n * @static\n * @param {string} name\n * @param {object|function=} ext\n * @returns {*}\n */\nshowdown.extension = function (name, ext) {\n  'use strict';\n\n  if (!showdown.helper.isString(name)) {\n    throw Error('Extension \\'name\\' must be a string');\n  }\n\n  name = showdown.helper.stdExtName(name);\n\n  // Getter\n  if (showdown.helper.isUndefined(ext)) {\n    if (!extensions.hasOwnProperty(name)) {\n      throw Error('Extension named ' + name + ' is not registered!');\n    }\n    return extensions[name];\n\n    // Setter\n  } else {\n    // Expand extension if it's wrapped in a function\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    // Ensure extension is an array\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExtension = validate(ext, name);\n\n    if (validExtension.valid) {\n      extensions[name] = ext;\n    } else {\n      throw Error(validExtension.error);\n    }\n  }\n};\n\n/**\n * Gets all extensions registered\n * @returns {{}}\n */\nshowdown.getAllExtensions = function () {\n  'use strict';\n  return extensions;\n};\n\n/**\n * Remove an extension\n * @param {string} name\n */\nshowdown.removeExtension = function (name) {\n  'use strict';\n  delete extensions[name];\n};\n\n/**\n * Removes all extensions\n */\nshowdown.resetExtensions = function () {\n  'use strict';\n  extensions = {};\n};\n\n/**\n * Validate extension\n * @param {array} extension\n * @param {string} name\n * @returns {{valid: boolean, error: string}}\n */\nfunction validate (extension, name) {\n  'use strict';\n\n  var errMsg = (name) ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\n      ret = {\n        valid: true,\n        error: ''\n      };\n\n  if (!showdown.helper.isArray(extension)) {\n    extension = [extension];\n  }\n\n  for (var i = 0; i < extension.length; ++i) {\n    var baseMsg = errMsg + ' sub-extension ' + i + ': ',\n        ext = extension[i];\n    if (typeof ext !== 'object') {\n      ret.valid = false;\n      ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given';\n      return ret;\n    }\n\n    if (!showdown.helper.isString(ext.type)) {\n      ret.valid = false;\n      ret.error = baseMsg + 'property \"type\" must be a string, but ' + typeof ext.type + ' given';\n      return ret;\n    }\n\n    var type = ext.type = ext.type.toLowerCase();\n\n    // normalize extension type\n    if (type === 'language') {\n      type = ext.type = 'lang';\n    }\n\n    if (type === 'html') {\n      type = ext.type = 'output';\n    }\n\n    if (type !== 'lang' && type !== 'output' && type !== 'listener') {\n      ret.valid = false;\n      ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"';\n      return ret;\n    }\n\n    if (type === 'listener') {\n      if (showdown.helper.isUndefined(ext.listeners)) {\n        ret.valid = false;\n        ret.error = baseMsg + '. Extensions of type \"listener\" must have a property called \"listeners\"';\n        return ret;\n      }\n    } else {\n      if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\n        ret.valid = false;\n        ret.error = baseMsg + type + ' extensions must define either a \"regex\" property or a \"filter\" method';\n        return ret;\n      }\n    }\n\n    if (ext.listeners) {\n      if (typeof ext.listeners !== 'object') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"listeners\" property must be an object but ' + typeof ext.listeners + ' given';\n        return ret;\n      }\n      for (var ln in ext.listeners) {\n        if (ext.listeners.hasOwnProperty(ln)) {\n          if (typeof ext.listeners[ln] !== 'function') {\n            ret.valid = false;\n            ret.error = baseMsg + '\"listeners\" property must be an hash of [event name]: [callback]. listeners.' + ln +\n              ' must be a function but ' + typeof ext.listeners[ln] + ' given';\n            return ret;\n          }\n        }\n      }\n    }\n\n    if (ext.filter) {\n      if (typeof ext.filter !== 'function') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"filter\" must be a function, but ' + typeof ext.filter + ' given';\n        return ret;\n      }\n    } else if (ext.regex) {\n      if (showdown.helper.isString(ext.regex)) {\n        ext.regex = new RegExp(ext.regex, 'g');\n      }\n      if (!(ext.regex instanceof RegExp)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given';\n        return ret;\n      }\n      if (showdown.helper.isUndefined(ext.replace)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" extensions must implement a replace string or function';\n        return ret;\n      }\n    }\n  }\n  return ret;\n}\n\n/**\n * Validate extension\n * @param {object} ext\n * @returns {boolean}\n */\nshowdown.validateExtension = function (ext) {\n  'use strict';\n\n  var validateExtension = validate(ext, null);\n  if (!validateExtension.valid) {\n    console.warn(validateExtension.error);\n    return false;\n  }\n  return true;\n};\n\r\n/**\n * showdownjs helper functions\n */\n\nif (!showdown.hasOwnProperty('helper')) {\n  showdown.helper = {};\n}\n\n/**\n * Check if var is string\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isString = function (a) {\n  'use strict';\n  return (typeof a === 'string' || a instanceof String);\n};\n\n/**\n * Check if var is a function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isFunction = function (a) {\n  'use strict';\n  var getType = {};\n  return a && getType.toString.call(a) === '[object Function]';\n};\n\n/**\n * isArray helper function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isArray = function (a) {\n  'use strict';\n  return a.constructor === Array;\n};\n\n/**\n * Check if value is undefined\n * @static\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n */\nshowdown.helper.isUndefined = function (value) {\n  'use strict';\n  return typeof value === 'undefined';\n};\n\n/**\n * ForEach helper function\n * Iterates over Arrays and Objects (own properties only)\n * @static\n * @param {*} obj\n * @param {function} callback Accepts 3 params: 1. value, 2. key, 3. the original array/object\n */\nshowdown.helper.forEach = function (obj, callback) {\n  'use strict';\n  // check if obj is defined\n  if (showdown.helper.isUndefined(obj)) {\n    throw new Error('obj param is required');\n  }\n\n  if (showdown.helper.isUndefined(callback)) {\n    throw new Error('callback param is required');\n  }\n\n  if (!showdown.helper.isFunction(callback)) {\n    throw new Error('callback param must be a function/closure');\n  }\n\n  if (typeof obj.forEach === 'function') {\n    obj.forEach(callback);\n  } else if (showdown.helper.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      callback(obj[i], i, obj);\n    }\n  } else if (typeof (obj) === 'object') {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        callback(obj[prop], prop, obj);\n      }\n    }\n  } else {\n    throw new Error('obj does not seem to be an array or an iterable object');\n  }\n};\n\n/**\n * Standardidize extension name\n * @static\n * @param {string} s extension name\n * @returns {string}\n */\nshowdown.helper.stdExtName = function (s) {\n  'use strict';\n  return s.replace(/[_?*+\\/\\\\.^-]/g, '').replace(/\\s/g, '').toLowerCase();\n};\n\nfunction escapeCharactersCallback (wholeMatch, m1) {\n  'use strict';\n  var charCodeToEscape = m1.charCodeAt(0);\n  return '¨E' + charCodeToEscape + 'E';\n}\n\n/**\n * Callback used to escape characters when passing through String.replace\n * @static\n * @param {string} wholeMatch\n * @param {string} m1\n * @returns {string}\n */\nshowdown.helper.escapeCharactersCallback = escapeCharactersCallback;\n\n/**\n * Escape characters in a string\n * @static\n * @param {string} text\n * @param {string} charsToEscape\n * @param {boolean} afterBackslash\n * @returns {XML|string|void|*}\n */\nshowdown.helper.escapeCharacters = function (text, charsToEscape, afterBackslash) {\n  'use strict';\n  // First we have to escape the escape characters so that\n  // we can build a character class out of them\n  var regexString = '([' + charsToEscape.replace(/([\\[\\]\\\\])/g, '\\\\$1') + '])';\n\n  if (afterBackslash) {\n    regexString = '\\\\\\\\' + regexString;\n  }\n\n  var regex = new RegExp(regexString, 'g');\n  text = text.replace(regex, escapeCharactersCallback);\n\n  return text;\n};\n\nvar rgxFindMatchPos = function (str, left, right, flags) {\n  'use strict';\n  var f = flags || '',\n      g = f.indexOf('g') > -1,\n      x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\n      l = new RegExp(left, f.replace(/g/g, '')),\n      pos = [],\n      t, s, m, start, end;\n\n  do {\n    t = 0;\n    while ((m = x.exec(str))) {\n      if (l.test(m[0])) {\n        if (!(t++)) {\n          s = x.lastIndex;\n          start = s - m[0].length;\n        }\n      } else if (t) {\n        if (!--t) {\n          end = m.index + m[0].length;\n          var obj = {\n            left: {start: start, end: s},\n            match: {start: s, end: m.index},\n            right: {start: m.index, end: end},\n            wholeMatch: {start: start, end: end}\n          };\n          pos.push(obj);\n          if (!g) {\n            return pos;\n          }\n        }\n      }\n    }\n  } while (t && (x.lastIndex = s));\n\n  return pos;\n};\n\n/**\n * matchRecursiveRegExp\n *\n * (c) 2007 Steven Levithan <stevenlevithan.com>\n * MIT License\n *\n * Accepts a string to search, a left and right format delimiter\n * as regex patterns, and optional regex flags. Returns an array\n * of matches, allowing nested instances of left/right delimiters.\n * Use the \"g\" flag to return all matches, otherwise only the\n * first is returned. Be careful to ensure that the left and\n * right format delimiters produce mutually exclusive matches.\n * Backreferences are not supported within the right delimiter\n * due to how it is internally combined with the left delimiter.\n * When matching strings whose format delimiters are unbalanced\n * to the left or right, the output is intentionally as a\n * conventional regex library with recursion support would\n * produce, e.g. \"<<x>\" and \"<x>>\" both produce [\"x\"] when using\n * \"<\" and \">\" as the delimiters (both strings contain a single,\n * balanced instance of \"<x>\").\n *\n * examples:\n * matchRecursiveRegExp(\"test\", \"\\\\(\", \"\\\\)\")\n * returns: []\n * matchRecursiveRegExp(\"<t<<e>><s>>t<>\", \"<\", \">\", \"g\")\n * returns: [\"t<<e>><s>\", \"\"]\n * matchRecursiveRegExp(\"<div id=\\\"x\\\">test</div>\", \"<div\\\\b[^>]*>\", \"</div>\", \"gi\")\n * returns: [\"test\"]\n */\nshowdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\n  'use strict';\n\n  var matchPos = rgxFindMatchPos (str, left, right, flags),\n      results = [];\n\n  for (var i = 0; i < matchPos.length; ++i) {\n    results.push([\n      str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n      str.slice(matchPos[i].match.start, matchPos[i].match.end),\n      str.slice(matchPos[i].left.start, matchPos[i].left.end),\n      str.slice(matchPos[i].right.start, matchPos[i].right.end)\n    ]);\n  }\n  return results;\n};\n\n/**\n *\n * @param {string} str\n * @param {string|function} replacement\n * @param {string} left\n * @param {string} right\n * @param {string} flags\n * @returns {string}\n */\nshowdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\n  'use strict';\n\n  if (!showdown.helper.isFunction(replacement)) {\n    var repStr = replacement;\n    replacement = function () {\n      return repStr;\n    };\n  }\n\n  var matchPos = rgxFindMatchPos(str, left, right, flags),\n      finalStr = str,\n      lng = matchPos.length;\n\n  if (lng > 0) {\n    var bits = [];\n    if (matchPos[0].wholeMatch.start !== 0) {\n      bits.push(str.slice(0, matchPos[0].wholeMatch.start));\n    }\n    for (var i = 0; i < lng; ++i) {\n      bits.push(\n        replacement(\n          str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n          str.slice(matchPos[i].match.start, matchPos[i].match.end),\n          str.slice(matchPos[i].left.start, matchPos[i].left.end),\n          str.slice(matchPos[i].right.start, matchPos[i].right.end)\n        )\n      );\n      if (i < lng - 1) {\n        bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));\n      }\n    }\n    if (matchPos[lng - 1].wholeMatch.end < str.length) {\n      bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));\n    }\n    finalStr = bits.join('');\n  }\n  return finalStr;\n};\n\n/**\n * Obfuscate an e-mail address through the use of Character Entities,\n * transforming ASCII characters into their equivalent decimal or hex entities.\n *\n * Since it has a random component, subsequent calls to this function produce different results\n *\n * @param {string} mail\n * @returns {string}\n */\nshowdown.helper.encodeEmailAddress = function (mail) {\n  'use strict';\n  var encode = [\n    function (ch) {\n      return '&#' + ch.charCodeAt(0) + ';';\n    },\n    function (ch) {\n      return '&#x' + ch.charCodeAt(0).toString(16) + ';';\n    },\n    function (ch) {\n      return ch;\n    }\n  ];\n\n  mail = mail.replace(/./g, function (ch) {\n    if (ch === '@') {\n      // this *must* be encoded. I insist.\n      ch = encode[Math.floor(Math.random() * 2)](ch);\n    } else {\n      var r = Math.random();\n      // roughly 10% raw, 45% hex, 45% dec\n      ch = (\n        r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch)\n      );\n    }\n    return ch;\n  });\n\n  return mail;\n};\n\n/**\n * POLYFILLS\n */\n// use this instead of builtin is undefined for IE8 compatibility\nif (typeof(console) === 'undefined') {\n  console = {\n    warn: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    log: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    error: function (msg) {\n      'use strict';\n      throw msg;\n    }\n  };\n}\n\n/**\n * Common regexes.\n * We declare some common regexes to improve performance\n */\nshowdown.helper.regexes = {\n  asteriskAndDash: /([*_])/g\n};\n\r\n/**\n * Created by Estevao on 31-05-2015.\n */\n\n/**\n * Showdown Converter class\n * @class\n * @param {object} [converterOptions]\n * @returns {Converter}\n */\nshowdown.Converter = function (converterOptions) {\n  'use strict';\n\n  var\n      /**\n       * Options used by this converter\n       * @private\n       * @type {{}}\n       */\n      options = {},\n\n      /**\n       * Language extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      langExtensions = [],\n\n      /**\n       * Output modifiers extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      outputModifiers = [],\n\n      /**\n       * Event listeners\n       * @private\n       * @type {{}}\n       */\n      listeners = {},\n\n      /**\n       * The flavor set in this converter\n       */\n      setConvFlavor = setFlavor;\n\n  _constructor();\n\n  /**\n   * Converter constructor\n   * @private\n   */\n  function _constructor () {\n    converterOptions = converterOptions || {};\n\n    for (var gOpt in globalOptions) {\n      if (globalOptions.hasOwnProperty(gOpt)) {\n        options[gOpt] = globalOptions[gOpt];\n      }\n    }\n\n    // Merge options\n    if (typeof converterOptions === 'object') {\n      for (var opt in converterOptions) {\n        if (converterOptions.hasOwnProperty(opt)) {\n          options[opt] = converterOptions[opt];\n        }\n      }\n    } else {\n      throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions +\n      ' was passed instead.');\n    }\n\n    if (options.extensions) {\n      showdown.helper.forEach(options.extensions, _parseExtension);\n    }\n  }\n\n  /**\n   * Parse extension\n   * @param {*} ext\n   * @param {string} [name='']\n   * @private\n   */\n  function _parseExtension (ext, name) {\n\n    name = name || null;\n    // If it's a string, the extension was previously loaded\n    if (showdown.helper.isString(ext)) {\n      ext = showdown.helper.stdExtName(ext);\n      name = ext;\n\n      // LEGACY_SUPPORT CODE\n      if (showdown.extensions[ext]) {\n        console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' +\n          'Please inform the developer that the extension should be updated!');\n        legacyExtensionLoading(showdown.extensions[ext], ext);\n        return;\n      // END LEGACY SUPPORT CODE\n\n      } else if (!showdown.helper.isUndefined(extensions[ext])) {\n        ext = extensions[ext];\n\n      } else {\n        throw Error('Extension \"' + ext + '\" could not be loaded. It was either not found or is not a valid extension.');\n      }\n    }\n\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExt = validate(ext, name);\n    if (!validExt.valid) {\n      throw Error(validExt.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n      }\n      if (ext[i].hasOwnProperty('listeners')) {\n        for (var ln in ext[i].listeners) {\n          if (ext[i].listeners.hasOwnProperty(ln)) {\n            listen(ln, ext[i].listeners[ln]);\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * LEGACY_SUPPORT\n   * @param {*} ext\n   * @param {string} name\n   */\n  function legacyExtensionLoading (ext, name) {\n    if (typeof ext === 'function') {\n      ext = ext(new showdown.Converter());\n    }\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n    var valid = validate(ext, name);\n\n    if (!valid.valid) {\n      throw Error(valid.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n        default:// should never reach here\n          throw Error('Extension loader error: Type unrecognized!!!');\n      }\n    }\n  }\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   */\n  function listen (name, callback) {\n    if (!showdown.helper.isString(name)) {\n      throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given');\n    }\n\n    if (typeof callback !== 'function') {\n      throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given');\n    }\n\n    if (!listeners.hasOwnProperty(name)) {\n      listeners[name] = [];\n    }\n    listeners[name].push(callback);\n  }\n\n  function rTrimInputText (text) {\n    var rsp = text.match(/^\\s*/)[0].length,\n        rgx = new RegExp('^\\\\s{0,' + rsp + '}', 'gm');\n    return text.replace(rgx, '');\n  }\n\n  /**\n   * Dispatch an event\n   * @private\n   * @param {string} evtName Event name\n   * @param {string} text Text\n   * @param {{}} options Converter Options\n   * @param {{}} globals\n   * @returns {string}\n   */\n  this._dispatch = function dispatch (evtName, text, options, globals) {\n    if (listeners.hasOwnProperty(evtName)) {\n      for (var ei = 0; ei < listeners[evtName].length; ++ei) {\n        var nText = listeners[evtName][ei](evtName, text, this, options, globals);\n        if (nText && typeof nText !== 'undefined') {\n          text = nText;\n        }\n      }\n    }\n    return text;\n  };\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   * @returns {showdown.Converter}\n   */\n  this.listen = function (name, callback) {\n    listen(name, callback);\n    return this;\n  };\n\n  /**\n   * Converts a markdown string into HTML\n   * @param {string} text\n   * @returns {*}\n   */\n  this.makeHtml = function (text) {\n    //check if text is not falsy\n    if (!text) {\n      return text;\n    }\n\n    var globals = {\n      gHtmlBlocks:     [],\n      gHtmlMdBlocks:   [],\n      gHtmlSpans:      [],\n      gUrls:           {},\n      gTitles:         {},\n      gDimensions:     {},\n      gListLevel:      0,\n      hashLinkCounts:  {},\n      langExtensions:  langExtensions,\n      outputModifiers: outputModifiers,\n      converter:       this,\n      ghCodeBlocks:    []\n    };\n\n    // This lets us use ¨ trema as an escape char to avoid md5 hashes\n    // The choice of character is arbitrary; anything that isn't\n    // magic in Markdown will work.\n    text = text.replace(/¨/g, '¨T');\n\n    // Replace $ with ¨D\n    // RegExp interprets $ as a special character\n    // when it's in a replacement string\n    text = text.replace(/\\$/g, '¨D');\n\n    // Standardize line endings\n    text = text.replace(/\\r\\n/g, '\\n'); // DOS to Unix\n    text = text.replace(/\\r/g, '\\n'); // Mac to Unix\n\n    // Stardardize line spaces (nbsp causes trouble in older browsers and some regex flavors)\n    text = text.replace(/\\u00A0/g, ' ');\n\n    if (options.smartIndentationFix) {\n      text = rTrimInputText(text);\n    }\n\n    // Make sure text begins and ends with a couple of newlines:\n    text = '\\n\\n' + text + '\\n\\n';\n\n    // detab\n    text = showdown.subParser('detab')(text, options, globals);\n\n    /**\n     * Strip any lines consisting only of spaces and tabs.\n     * This makes subsequent regexs easier to write, because we can\n     * match consecutive blank lines with /\\n+/ instead of something\n     * contorted like /[ \\t]*\\n+/\n     */\n    text = text.replace(/^[ \\t]+$/mg, '');\n\n    //run languageExtensions\n    showdown.helper.forEach(langExtensions, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    // run the sub parsers\n    text = showdown.subParser('hashPreCodeTags')(text, options, globals);\n    text = showdown.subParser('githubCodeBlocks')(text, options, globals);\n    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n    text = showdown.subParser('hashCodeTags')(text, options, globals);\n    text = showdown.subParser('stripLinkDefinitions')(text, options, globals);\n    text = showdown.subParser('blockGamut')(text, options, globals);\n    text = showdown.subParser('unhashHTMLSpans')(text, options, globals);\n    text = showdown.subParser('unescapeSpecialChars')(text, options, globals);\n\n    // attacklab: Restore dollar signs\n    text = text.replace(/¨D/g, '$$');\n\n    // attacklab: Restore tremas\n    text = text.replace(/¨T/g, '¨');\n\n    // Run output modifiers\n    showdown.helper.forEach(outputModifiers, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    return text;\n  };\n\n  /**\n   * Set an option of this Converter instance\n   * @param {string} key\n   * @param {*} value\n   */\n  this.setOption = function (key, value) {\n    options[key] = value;\n  };\n\n  /**\n   * Get the option of this Converter instance\n   * @param {string} key\n   * @returns {*}\n   */\n  this.getOption = function (key) {\n    return options[key];\n  };\n\n  /**\n   * Get the options of this Converter instance\n   * @returns {{}}\n   */\n  this.getOptions = function () {\n    return options;\n  };\n\n  /**\n   * Add extension to THIS converter\n   * @param {{}} extension\n   * @param {string} [name=null]\n   */\n  this.addExtension = function (extension, name) {\n    name = name || null;\n    _parseExtension(extension, name);\n  };\n\n  /**\n   * Use a global registered extension with THIS converter\n   * @param {string} extensionName Name of the previously registered extension\n   */\n  this.useExtension = function (extensionName) {\n    _parseExtension(extensionName);\n  };\n\n  /**\n   * Set the flavor THIS converter should use\n   * @param {string} name\n   */\n  this.setFlavor = function (name) {\n    if (!flavor.hasOwnProperty(name)) {\n      throw Error(name + ' flavor was not found');\n    }\n    var preset = flavor[name];\n    setConvFlavor = name;\n    for (var option in preset) {\n      if (preset.hasOwnProperty(option)) {\n        options[option] = preset[option];\n      }\n    }\n  };\n\n  /**\n   * Get the currently set flavor of this converter\n   * @returns {string}\n   */\n  this.getFlavor = function () {\n    return setConvFlavor;\n  };\n\n  /**\n   * Remove an extension from THIS converter.\n   * Note: This is a costly operation. It's better to initialize a new converter\n   * and specify the extensions you wish to use\n   * @param {Array} extension\n   */\n  this.removeExtension = function (extension) {\n    if (!showdown.helper.isArray(extension)) {\n      extension = [extension];\n    }\n    for (var a = 0; a < extension.length; ++a) {\n      var ext = extension[a];\n      for (var i = 0; i < langExtensions.length; ++i) {\n        if (langExtensions[i] === ext) {\n          langExtensions[i].splice(i, 1);\n        }\n      }\n      for (var ii = 0; ii < outputModifiers.length; ++i) {\n        if (outputModifiers[ii] === ext) {\n          outputModifiers[ii].splice(i, 1);\n        }\n      }\n    }\n  };\n\n  /**\n   * Get all extension of THIS converter\n   * @returns {{language: Array, output: Array}}\n   */\n  this.getAllExtensions = function () {\n    return {\n      language: langExtensions,\n      output: outputModifiers\n    };\n  };\n};\n\r\n/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('anchors', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('anchors.before', text, options, globals);\n\n  var writeAnchorTag = function (wholeMatch, m1, m2, m3, m4, m5, m6, m7) {\n    if (showdown.helper.isUndefined(m7)) {\n      m7 = '';\n    }\n    wholeMatch = m1;\n    var linkText = m2,\n        linkId = m3.toLowerCase(),\n        url = m4,\n        title = m7;\n\n    if (!url) {\n      if (!linkId) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = linkText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\n        url = globals.gUrls[linkId];\n        if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\n          title = globals.gTitles[linkId];\n        }\n      } else {\n        if (wholeMatch.search(/\\(\\s*\\)$/m) > -1) {\n          // Special case for explicit empty url\n          url = '';\n        } else {\n          return wholeMatch;\n        }\n      }\n    }\n\n    //url = showdown.helper.escapeCharacters(url, '*_', false); // replaced line to improve performance\n    url = url.replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);\n\n    var result = '<a href=\"' + url + '\"';\n\n    if (title !== '' && title !== null) {\n      title = title.replace(/\"/g, '&quot;');\n      //title = showdown.helper.escapeCharacters(title, '*_', false); // replaced line to improve performance\n      title = title.replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);\n      result += ' title=\"' + title + '\"';\n    }\n\n    result += '>' + linkText + '</a>';\n\n    return result;\n  };\n\n  // First, handle reference-style links: [link text] [id]\n  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)][ ]?(?:\\n[ ]*)?\\[(.*?)])()()()()/g, writeAnchorTag);\n\n  // Next, inline-style links: [link text](url \"optional title\")\n  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]\\([ \\t]*()<?(.*?(?:\\(.*?\\).*?)?)>?[ \\t]*((['\"])(.*?)\\6[ \\t]*)?\\))/g,\n                      writeAnchorTag);\n\n  // handle reference-style shortcuts: [link text]\n  // These must come last in case you've also got [link test][1]\n  // or [link test](/foo)\n  text = text.replace(/(\\[([^\\[\\]]+)])()()()()()/g, writeAnchorTag);\n\n  // Lastly handle GithubMentions if option is enabled\n  if (options.ghMentions) {\n    text = text.replace(/(^|\\s)(\\\\)?(@([a-z\\d\\-]+))(?=[.!?;,[\\]()]|\\s|$)/gmi, function (wm, st, escape, mentions, username) {\n      if (escape === '\\\\') {\n        return st + mentions;\n      }\n\n      //check if options.ghMentionsLink is a string\n      if (!showdown.helper.isString(options.ghMentionsLink)) {\n        throw new Error('ghMentionsLink option must be a string');\n      }\n      var lnk = options.ghMentionsLink.replace(/\\{u}/g, username);\n      return st + '<a href=\"' + lnk + '\">' + mentions + '</a>';\n    });\n  }\n\n  text = globals.converter._dispatch('anchors.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('autoLinks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('autoLinks.before', text, options, globals);\n\n  var simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+)()(?=\\s|$)(?![\"<>])/gi,\n      simpleURLRegex2 = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+?)([.!?()]?)(?=\\s|$)(?![\"<>])/gi,\n      delimUrlRegex   = /<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)>/gi,\n      simpleMailRegex = /(^|\\s)(?:mailto:)?([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?=$|\\s)/gmi,\n      delimMailRegex  = /<()(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi;\n\n  text = text.replace(delimUrlRegex, replaceLink);\n  text = text.replace(delimMailRegex, replaceMail);\n  // simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[-.+~:?#@!$&'()*,;=[\\]\\w]+)\\b/gi,\n  // Email addresses: <address@domain.foo>\n\n  if (options.simplifiedAutoLink) {\n    if (options.excludeTrailingPunctuationFromURLs) {\n      text = text.replace(simpleURLRegex2, replaceLink);\n    } else {\n      text = text.replace(simpleURLRegex, replaceLink);\n    }\n    text = text.replace(simpleMailRegex, replaceMail);\n  }\n\n  function replaceLink (wm, link, m2, m3, trailingPunctuation) {\n    var lnkTxt = link,\n        append = '';\n    if (/^www\\./i.test(link)) {\n      link = link.replace(/^www\\./i, 'http://www.');\n    }\n    if (options.excludeTrailingPunctuationFromURLs && trailingPunctuation) {\n      append = trailingPunctuation;\n    }\n    return '<a href=\"' + link + '\">' + lnkTxt + '</a>' + append;\n  }\n\n  function replaceMail (wholeMatch, b, mail) {\n    var href = 'mailto:';\n    b = b || '';\n    mail = showdown.subParser('unescapeSpecialChars')(mail, options, globals);\n    if (options.encodeEmails) {\n      href = showdown.helper.encodeEmailAddress(href + mail);\n      mail = showdown.helper.encodeEmailAddress(mail);\n    } else {\n      href = href + mail;\n    }\n    return b + '<a href=\"' + href + '\">' + mail + '</a>';\n  }\n\n  text = globals.converter._dispatch('autoLinks.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that form block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('blockGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockGamut.before', text, options, globals);\n\n  // we parse blockquotes first so that we can have headings and hrs\n  // inside blockquotes\n  text = showdown.subParser('blockQuotes')(text, options, globals);\n  text = showdown.subParser('headers')(text, options, globals);\n\n  // Do Horizontal Rules:\n  text = showdown.subParser('horizontalRule')(text, options, globals);\n\n  text = showdown.subParser('lists')(text, options, globals);\n  text = showdown.subParser('codeBlocks')(text, options, globals);\n  text = showdown.subParser('tables')(text, options, globals);\n\n  // We already ran _HashHTMLBlocks() before, in Markdown(), but that\n  // was to escape raw HTML in the original Markdown source. This time,\n  // we're escaping the markup we've just created, so that we don't wrap\n  // <p> tags around block-level tags.\n  text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n  text = showdown.subParser('paragraphs')(text, options, globals);\n\n  text = globals.converter._dispatch('blockGamut.after', text, options, globals);\n\n  return text;\n});\n\r\nshowdown.subParser('blockQuotes', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockQuotes.before', text, options, globals);\n\n  text = text.replace(/((^ {0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+)/gm, function (wholeMatch, m1) {\n    var bq = m1;\n\n    // attacklab: hack around Konqueror 3.5.4 bug:\n    // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n    bq = bq.replace(/^[ \\t]*>[ \\t]?/gm, '¨0'); // trim one level of quoting\n\n    // attacklab: clean up hack\n    bq = bq.replace(/¨0/g, '');\n\n    bq = bq.replace(/^[ \\t]+$/gm, ''); // trim whitespace-only lines\n    bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);\n    bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse\n\n    bq = bq.replace(/(^|\\n)/g, '$1  ');\n    // These leading spaces screw with <pre> content, so we need to fix that:\n    bq = bq.replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm, function (wholeMatch, m1) {\n      var pre = m1;\n      // attacklab: hack around Konqueror 3.5.4 bug:\n      pre = pre.replace(/^  /mg, '¨0');\n      pre = pre.replace(/¨0/g, '');\n      return pre;\n    });\n\n    return showdown.subParser('hashBlock')('<blockquote>\\n' + bq + '\\n</blockquote>', options, globals);\n  });\n\n  text = globals.converter._dispatch('blockQuotes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Process Markdown `<pre><code>` blocks.\n */\nshowdown.subParser('codeBlocks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeBlocks.before', text, options, globals);\n\n  // sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '¨0';\n\n  var pattern = /(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=¨0))/g;\n  text = text.replace(pattern, function (wholeMatch, m1, m2) {\n    var codeblock = m1,\n        nextChar = m2,\n        end = '\\n';\n\n    codeblock = showdown.subParser('outdent')(codeblock, options, globals);\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing newlines\n\n    if (options.omitExtraWLInCodeBlocks) {\n      end = '';\n    }\n\n    codeblock = '<pre><code>' + codeblock + end + '</code></pre>';\n\n    return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;\n  });\n\n  // strip sentinel\n  text = text.replace(/¨0/, '');\n\n  text = globals.converter._dispatch('codeBlocks.after', text, options, globals);\n  return text;\n});\n\r\n/**\n *\n *   *  Backtick quotes are used for <code></code> spans.\n *\n *   *  You can use multiple backticks as the delimiters if you want to\n *     include literal backticks in the code span. So, this input:\n *\n *         Just type ``foo `bar` baz`` at the prompt.\n *\n *       Will translate to:\n *\n *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\n *\n *    There's no arbitrary limit to the number of backticks you\n *    can use as delimters. If you need three consecutive backticks\n *    in your code, use four for delimiters, etc.\n *\n *  *  You can use spaces to get literal backticks at the edges:\n *\n *         ... type `` `bar` `` ...\n *\n *       Turns to:\n *\n *         ... type <code>`bar`</code> ...\n */\nshowdown.subParser('codeSpans', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeSpans.before', text, options, globals);\n\n  if (typeof(text) === 'undefined') {\n    text = '';\n  }\n  text = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm,\n    function (wholeMatch, m1, m2, m3) {\n      var c = m3;\n      c = c.replace(/^([ \\t]*)/g, '');\t// leading whitespace\n      c = c.replace(/[ \\t]*$/g, '');\t// trailing whitespace\n      c = showdown.subParser('encodeCode')(c, options, globals);\n      return m1 + '<code>' + c + '</code>';\n    }\n  );\n\n  text = globals.converter._dispatch('codeSpans.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Convert all tabs to spaces\n */\nshowdown.subParser('detab', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('detab.before', text, options, globals);\n\n  // expand first n-1 tabs\n  text = text.replace(/\\t(?=\\t)/g, '    '); // g_tab_width\n\n  // replace the nth with two sentinels\n  text = text.replace(/\\t/g, '¨A¨B');\n\n  // use the sentinel to anchor our regex so it doesn't explode\n  text = text.replace(/¨B(.+?)¨A/g, function (wholeMatch, m1) {\n    var leadingText = m1,\n        numSpaces = 4 - leadingText.length % 4;  // g_tab_width\n\n    // there *must* be a better way to do this:\n    for (var i = 0; i < numSpaces; i++) {\n      leadingText += ' ';\n    }\n\n    return leadingText;\n  });\n\n  // clean up sentinels\n  text = text.replace(/¨A/g, '    ');  // g_tab_width\n  text = text.replace(/¨B/g, '');\n\n  text = globals.converter._dispatch('detab.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Smart processing for ampersands and angle brackets that need to be encoded.\n */\nshowdown.subParser('encodeAmpsAndAngles', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('encodeAmpsAndAngles.before', text, options, globals);\n\n  // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\n  // http://bumppo.net/projects/amputator/\n  text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g, '&amp;');\n\n  // Encode naked <'s\n  text = text.replace(/<(?![a-z\\/?$!])/gi, '&lt;');\n\n  // Encode <\n  text = text.replace(/</g, '&lt;');\n\n  // Encode >\n  text = text.replace(/>/g, '&gt;');\n\n  text = globals.converter._dispatch('encodeAmpsAndAngles.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Returns the string, with after processing the following backslash escape sequences.\n *\n * attacklab: The polite way to do this is with the new escapeCharacters() function:\n *\n *    text = escapeCharacters(text,\"\\\\\",true);\n *    text = escapeCharacters(text,\"`*_{}[]()>#+-.!\",true);\n *\n * ...but we're sidestepping its use of the (slow) RegExp constructor\n * as an optimization for Firefox.  This function gets called a LOT.\n */\nshowdown.subParser('encodeBackslashEscapes', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('encodeBackslashEscapes.before', text, options, globals);\n\n  text = text.replace(/\\\\(\\\\)/g, showdown.helper.escapeCharactersCallback);\n  text = text.replace(/\\\\([`*_{}\\[\\]()>#+.!~=-])/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('encodeBackslashEscapes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Encode/escape certain characters inside Markdown code runs.\n * The point is that in code, these characters are literals,\n * and lose their special Markdown meanings.\n */\nshowdown.subParser('encodeCode', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('encodeCode.before', text, options, globals);\n\n  // Encode all ampersands; HTML entities are not\n  // entities within a Markdown code span.\n  text = text\n    .replace(/&/g, '&amp;')\n  // Do the angle bracket song and dance:\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n  // Now, escape characters that are magic in Markdown:\n    .replace(/([*_{}\\[\\]\\\\=~-])/g, showdown.helper.escapeCharactersCallback);\n\n  text = globals.converter._dispatch('encodeCode.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Within tags -- meaning between < and > -- encode [\\ ` * _ ~ =] so they\n * don't conflict with their use in Markdown for code, italics and strong.\n */\nshowdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.before', text, options, globals);\n\n  // Build a regex to find HTML tags and comments.  See Friedl's\n  // \"Mastering Regular Expressions\", 2nd Ed., pp. 200-201.\n  var regex = /(<[a-z\\/!$](\"[^\"]*\"|'[^']*'|[^'\">])*>|<!(--.*?--\\s*)+>)/gi;\n\n  text = text.replace(regex, function (wholeMatch) {\n    return wholeMatch\n      .replace(/(.)<\\/?code>(?=.)/g, '$1`')\n      .replace(/([\\\\`*_~=])/g, showdown.helper.escapeCharactersCallback);\n  });\n\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Handle github codeblocks prior to running HashHTML so that\n * HTML contained within the codeblock gets escaped properly\n * Example:\n * ```ruby\n *     def hello_world(x)\n *       puts \"Hello, #{x}\"\n *     end\n * ```\n */\nshowdown.subParser('githubCodeBlocks', function (text, options, globals) {\n  'use strict';\n\n  // early exit if option is not enabled\n  if (!options.ghCodeBlocks) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);\n\n  text += '¨0';\n\n  text = text.replace(/(?:^|\\n)```(.*)\\n([\\s\\S]*?)\\n```/g, function (wholeMatch, language, codeblock) {\n    var end = (options.omitExtraWLInCodeBlocks) ? '' : '\\n';\n\n    // First parse the github code block\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing whitespace\n\n    codeblock = '<pre><code' + (language ? ' class=\"' + language + ' language-' + language + '\"' : '') + '>' + codeblock + end + '</code></pre>';\n\n    codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);\n\n    // Since GHCodeblocks can be false positives, we need to\n    // store the primitive text and the parsed text in a global var,\n    // and then return a token\n    return '\\n\\n¨G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/¨0/, '');\n\n  return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);\n});\n\r\nshowdown.subParser('hashBlock', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashBlock.before', text, options, globals);\n  text = text.replace(/(^\\n+|\\n+$)/g, '');\n  text = '\\n\\n¨K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\n\\n';\n  text = globals.converter._dispatch('hashBlock.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Hash and escape <code> elements that should not be parsed as markdown\n */\nshowdown.subParser('hashCodeTags', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashCodeTags.before', text, options, globals);\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\n    return '¨C' + (globals.gHtmlSpans.push(codeblock) - 1) + 'C';\n  };\n\n  // Hash naked <code>\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '<code\\\\b[^>]*>', '</code>', 'gim');\n\n  text = globals.converter._dispatch('hashCodeTags.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('hashElement', function (text, options, globals) {\n  'use strict';\n\n  return function (wholeMatch, m1) {\n    var blockText = m1;\n\n    // Undo double lines\n    blockText = blockText.replace(/\\n\\n/g, '\\n');\n    blockText = blockText.replace(/^\\n/, '');\n\n    // strip trailing blank lines\n    blockText = blockText.replace(/\\n+$/g, '');\n\n    // Replace the element text with a marker (\"¨KxK\" where x is its key)\n    blockText = '\\n\\n¨K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\n\\n';\n\n    return blockText;\n  };\n});\n\r\nshowdown.subParser('hashHTMLBlocks', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashHTMLBlocks.before', text, options, globals);\n\n  var blockTags = [\n        'pre',\n        'div',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'blockquote',\n        'table',\n        'dl',\n        'ol',\n        'ul',\n        'script',\n        'noscript',\n        'form',\n        'fieldset',\n        'iframe',\n        'math',\n        'style',\n        'section',\n        'header',\n        'footer',\n        'nav',\n        'article',\n        'aside',\n        'address',\n        'audio',\n        'canvas',\n        'figure',\n        'hgroup',\n        'output',\n        'video',\n        'p'\n      ],\n      repFunc = function (wholeMatch, match, left, right) {\n        var txt = wholeMatch;\n        // check if this html element is marked as markdown\n        // if so, it's contents should be parsed as markdown\n        if (left.search(/\\bmarkdown\\b/) !== -1) {\n          txt = left + globals.converter.makeHtml(match) + right;\n        }\n        return '\\n\\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n      };\n\n  for (var i = 0; i < blockTags.length; ++i) {\n    text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<' + blockTags[i] + '\\\\b[^>]*>', '</' + blockTags[i] + '>', 'gim');\n  }\n\n  // HR SPECIAL CASE\n  text = text.replace(/(\\n {0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  // Special case for standalone HTML comments\n  text = showdown.helper.replaceRecursiveRegExp(text, function (txt) {\n    return '\\n\\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n  }, '^ {0,3}<!--', '-->', 'gm');\n\n  // PHP and ASP-style processor instructions (<?...?> and <%...%>)\n  text = text.replace(/(?:\\n\\n)( {0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  text = globals.converter._dispatch('hashHTMLBlocks.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashHTMLSpans', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashHTMLSpans.before', text, options, globals);\n\n  function hashHTMLSpan (html) {\n    return '¨C' + (globals.gHtmlSpans.push(html) - 1) + 'C';\n  }\n\n  // Hash Self Closing tags\n  text = text.replace(/<[^>]+?\\/>/gi, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash tags without properties\n  text = text.replace(/<([^>]+?)>[\\s\\S]*?<\\/\\1>/g, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash tags with properties\n  text = text.replace(/<([^>]+?)\\s[^>]+?>[\\s\\S]*?<\\/\\1>/g, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  // Hash self closing tags without />\n  text = text.replace(/<[^>]+?>/gi, function (wm) {\n    return hashHTMLSpan(wm);\n  });\n\n  /*showdown.helper.matchRecursiveRegExp(text, '<code\\\\b[^>]*>', '</code>', 'gi');*/\n\n  text = globals.converter._dispatch('hashHTMLSpans.after', text, options, globals);\n  return text;\n});\n\n/**\n * Unhash HTML spans\n */\nshowdown.subParser('unhashHTMLSpans', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('unhashHTMLSpans.before', text, options, globals);\n\n  for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\n    var repText = globals.gHtmlSpans[i],\n        // limiter to prevent infinite loop (assume 10 as limit for recurse)\n        limit = 0;\n\n    while (/¨C(\\d+)C/.test(repText)) {\n      var num = RegExp.$1;\n      repText = repText.replace('¨C' + num + 'C', globals.gHtmlSpans[num]);\n      if (limit === 10) {\n        break;\n      }\n      ++limit;\n    }\n    text = text.replace('¨C' + i + 'C', repText);\n  }\n\n  text = globals.converter._dispatch('unhashHTMLSpans.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Hash and escape <pre><code> elements that should not be parsed as markdown\n */\nshowdown.subParser('hashPreCodeTags', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('hashPreCodeTags.before', text, options, globals);\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    // encode html entities\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\n    return '\\n\\n¨G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  };\n\n  // Hash <pre><code>\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>', '^ {0,3}</code>\\\\s*</pre>', 'gim');\n\n  text = globals.converter._dispatch('hashPreCodeTags.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('headers', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('headers.before', text, options, globals);\n\n  var headerLevelStart = (isNaN(parseInt(options.headerLevelStart))) ? 1 : parseInt(options.headerLevelStart),\n      ghHeaderId = options.ghCompatibleHeaderId,\n\n  // Set text-style headers:\n  //\tHeader 1\n  //\t========\n  //\n  //\tHeader 2\n  //\t--------\n  //\n      setextRegexH1 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,\n      setextRegexH2 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm;\n\n  text = text.replace(setextRegexH1, function (wholeMatch, m1) {\n\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  text = text.replace(setextRegexH2, function (matchFound, m1) {\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart + 1,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  // atx-style headers:\n  //  # Header 1\n  //  ## Header 2\n  //  ## Header 2 with closing hashes ##\n  //  ...\n  //  ###### Header 6\n  //\n  var atxStyle = (options.requireSpaceBeforeHeadingText) ? /^(#{1,6})[ \\t]+(.+?)[ \\t]*#*\\n+/gm : /^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm;\n\n  text = text.replace(atxStyle, function (wholeMatch, m1, m2) {\n    var span = showdown.subParser('spanGamut')(m2, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m2) + '\"',\n        hLevel = headerLevelStart - 1 + m1.length,\n        header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';\n\n    return showdown.subParser('hashBlock')(header, options, globals);\n  });\n\n  function headerId (m) {\n    var title;\n    // Prefix id to prevent causing inadvertent pre-existing style matches.\n    if (showdown.helper.isString(options.prefixHeaderId)) {\n      title = options.prefixHeaderId + m;\n    } else if (options.prefixHeaderId === true) {\n      title = 'section ' + m;\n    } else {\n      title = m;\n    }\n\n    if (ghHeaderId) {\n      title = title\n        .replace(/ /g, '-')\n        // replace previously escaped chars (&, ¨ and $)\n        .replace(/&amp;/g, '')\n        .replace(/¨T/g, '')\n        .replace(/¨D/g, '')\n        // replace rest of the chars (&~$ are repeated as they might have been escaped)\n        // borrowed from github's redcarpet (some they should produce similar results)\n        .replace(/[&+$,\\/:;=?@\"#{}|^¨~\\[\\]`\\\\*)(%.!'<>]/g, '')\n        .toLowerCase();\n    } else {\n      title = title\n        .replace(/[^\\w]/g, '')\n        .toLowerCase();\n    }\n\n    if (globals.hashLinkCounts[title]) {\n      title = title + '-' + (globals.hashLinkCounts[title]++);\n    } else {\n      globals.hashLinkCounts[title] = 1;\n    }\n    return title;\n  }\n\n  text = globals.converter._dispatch('headers.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('horizontalRule', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('horizontalRule.before', text, options, globals);\n\n  var key = showdown.subParser('hashBlock')('<hr />', options, globals);\n  text = text.replace(/^ {0,2}( ?-){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?\\*){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?_){3,}[ \\t]*$/gm, key);\n\n  text = globals.converter._dispatch('horizontalRule.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Turn Markdown image shortcuts into <img> tags.\n */\nshowdown.subParser('images', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('images.before', text, options, globals);\n\n  var inlineRegExp    = /!\\[(.*?)]\\s?\\([ \\t]*()<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(['\"])(.*?)\\6[ \\t]*)?\\)/g,\n      referenceRegExp = /!\\[([^\\]]*?)] ?(?:\\n *)?\\[(.*?)]()()()()()/g;\n\n  function writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title) {\n\n    var gUrls   = globals.gUrls,\n        gTitles = globals.gTitles,\n        gDims   = globals.gDimensions;\n\n    linkId = linkId.toLowerCase();\n\n    if (!title) {\n      title = '';\n    }\n\n    if (url === '' || url === null) {\n      if (linkId === '' || linkId === null) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = altText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(gUrls[linkId])) {\n        url = gUrls[linkId];\n        if (!showdown.helper.isUndefined(gTitles[linkId])) {\n          title = gTitles[linkId];\n        }\n        if (!showdown.helper.isUndefined(gDims[linkId])) {\n          width = gDims[linkId].width;\n          height = gDims[linkId].height;\n        }\n      } else {\n        return wholeMatch;\n      }\n    }\n\n    altText = altText\n      .replace(/\"/g, '&quot;')\n    //altText = showdown.helper.escapeCharacters(altText, '*_', false);\n      .replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);\n    //url = showdown.helper.escapeCharacters(url, '*_', false);\n    url = url.replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);\n    var result = '<img src=\"' + url + '\" alt=\"' + altText + '\"';\n\n    if (title) {\n      title = title\n        .replace(/\"/g, '&quot;')\n      //title = showdown.helper.escapeCharacters(title, '*_', false);\n        .replace(showdown.helper.regexes.asteriskAndDash, showdown.helper.escapeCharactersCallback);\n      result += ' title=\"' + title + '\"';\n    }\n\n    if (width && height) {\n      width  = (width === '*') ? 'auto' : width;\n      height = (height === '*') ? 'auto' : height;\n\n      result += ' width=\"' + width + '\"';\n      result += ' height=\"' + height + '\"';\n    }\n\n    result += ' />';\n\n    return result;\n  }\n\n  // First, handle reference-style labeled images: ![alt text][id]\n  text = text.replace(referenceRegExp, writeImageTag);\n\n  // Next, handle inline images:  ![alt text](url =<width>x<height> \"optional title\")\n  text = text.replace(inlineRegExp, writeImageTag);\n\n  text = globals.converter._dispatch('images.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('italicsAndBold', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);\n\n  // it's faster to have 3 separate regexes for each case than have just one\n  // because of backtracing, in some cases, it could lead to an exponential effect\n  // called \"catastrophic backtrace\". Ominous!\n\n  // Parse underscores\n  if (options.literalMidWordUnderscores) {\n    text = text.replace(/\\b___(\\S[\\s\\S]*)___\\b/g, '<strong><em>$1</em></strong>');\n    text = text.replace(/\\b__(\\S[\\s\\S]*)__\\b/g, '<strong>$1</strong>');\n    text = text.replace(/\\b_(\\S[\\s\\S]*?)_\\b/g, '<em>$1</em>');\n  } else {\n    text = text.replace(/___(\\S[\\s\\S]*?)___/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? '<strong><em>' + m + '</em></strong>' : wm;\n    });\n    text = text.replace(/__(\\S[\\s\\S]*?)__/g, function (wm, m) {\n      return (/\\S$/.test(m)) ? '<strong>' + m + '</strong>' : wm;\n    });\n    text = text.replace(/_([^\\s_][\\s\\S]*?)_/g, function (wm, m) {\n      // !/^_[^_]/.test(m) - test if it doesn't start with __ (since it seems redundant, we removed it)\n      return (/\\S$/.test(m)) ? '<em>' + m + '</em>' : wm;\n    });\n  }\n\n  // Now parse asterisks\n  text = text.replace(/\\*\\*\\*(\\S[\\s\\S]*?)\\*\\*\\*/g, function (wm, m) {\n    return (/\\S$/.test(m)) ? '<strong><em>' + m + '</em></strong>' : wm;\n  });\n  text = text.replace(/\\*\\*(\\S[\\s\\S]*?)\\*\\*/g, function (wm, m) {\n    return (/\\S$/.test(m)) ? '<strong>' + m + '</strong>' : wm;\n  });\n  text = text.replace(/\\*([^\\s*][\\s\\S]*?)\\*/g, function (wm, m) {\n    // !/^\\*[^*]/.test(m) - test if it doesn't start with ** (since it seems redundant, we removed it)\n    return (/\\S$/.test(m)) ? '<em>' + m + '</em>' : wm;\n  });\n\n  text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Form HTML ordered (numbered) and unordered (bulleted) lists.\n */\nshowdown.subParser('lists', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('lists.before', text, options, globals);\n\n  /**\n   * Process the contents of a single ordered or unordered list, splitting it\n   * into individual list items.\n   * @param {string} listStr\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function processListItems (listStr, trimTrailing) {\n    // The $g_list_level global keeps track of when we're inside a list.\n    // Each time we enter a list, we increment it; when we leave a list,\n    // we decrement. If it's zero, we're not in a list anymore.\n    //\n    // We do this because when we're not inside a list, we want to treat\n    // something like this:\n    //\n    //    I recommend upgrading to version\n    //    8. Oops, now this line is treated\n    //    as a sub-list.\n    //\n    // As a single paragraph, despite the fact that the second line starts\n    // with a digit-period-space sequence.\n    //\n    // Whereas when we're inside a list (or sub-list), that line will be\n    // treated as the start of a sub-list. What a kludge, huh? This is\n    // an aspect of Markdown's syntax that's hard to parse perfectly\n    // without resorting to mind-reading. Perhaps the solution is to\n    // change the syntax rules such that sub-lists must start with a\n    // starting cardinal number; e.g. \"1.\" or \"a.\".\n    globals.gListLevel++;\n\n    // trim trailing blank lines:\n    listStr = listStr.replace(/\\n{2,}$/, '\\n');\n\n    // attacklab: add sentinel to emulate \\z\n    listStr += '¨0';\n\n    var rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(¨0| {0,3}([*+-]|\\d+[.])[ \\t]+))/gm,\n        isParagraphed = (/\\n[ \\t]*\\n(?!¨0)/.test(listStr));\n\n    // Since version 1.5, nesting sublists requires 4 spaces (or 1 tab) indentation,\n    // which is a syntax breaking change\n    // activating this option reverts to old behavior\n    if (options.disableForced4SpacesIndentedSublists) {\n      rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(¨0|\\2([*+-]|\\d+[.])[ \\t]+))/gm;\n    }\n\n    listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\n      checked = (checked && checked.trim() !== '');\n\n      var item = showdown.subParser('outdent')(m4, options, globals),\n          bulletStyle = '';\n\n      // Support for github tasklists\n      if (taskbtn && options.tasklists) {\n        bulletStyle = ' class=\"task-list-item\" style=\"list-style-type: none;\"';\n        item = item.replace(/^[ \\t]*\\[(x|X| )?]/m, function () {\n          var otp = '<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"';\n          if (checked) {\n            otp += ' checked';\n          }\n          otp += '>';\n          return otp;\n        });\n      }\n\n      // ISSUE #312\n      // This input: - - - a\n      // causes trouble to the parser, since it interprets it as:\n      // <ul><li><li><li>a</li></li></li></ul>\n      // instead of:\n      // <ul><li>- - a</li></ul>\n      // So, to prevent it, we will put a marker (¨A)in the beginning of the line\n      // Kind of hackish/monkey patching, but seems more effective than overcomplicating the list parser\n      item = item.replace(/^([-*+]|\\d\\.)[ \\t]+[\\S\\n ]*/g, function (wm2) {\n        return '¨A' + wm2;\n      });\n\n      // m1 - Leading line or\n      // Has a double return (multi paragraph) or\n      // Has sublist\n      if (m1 || (item.search(/\\n{2,}/) > -1)) {\n        item = showdown.subParser('githubCodeBlocks')(item, options, globals);\n        item = showdown.subParser('blockGamut')(item, options, globals);\n      } else {\n        // Recursion for sub-lists:\n        item = showdown.subParser('lists')(item, options, globals);\n        item = item.replace(/\\n$/, ''); // chomp(item)\n        item = showdown.subParser('hashHTMLBlocks')(item, options, globals);\n        // Colapse double linebreaks\n        item = item.replace(/\\n\\n+/g, '\\n\\n');\n        // replace double linebreaks with a placeholder\n        item = item.replace(/\\n\\n/g, '¨B');\n        if (isParagraphed) {\n          item = showdown.subParser('paragraphs')(item, options, globals);\n        } else {\n          item = showdown.subParser('spanGamut')(item, options, globals);\n        }\n        item = item.replace(/¨B/g, '\\n\\n');\n      }\n\n      // now we need to remove the marker (¨A)\n      item = item.replace('¨A', '');\n      // we can finally wrap the line in list item tags\n      item =  '<li' + bulletStyle + '>' + item + '</li>\\n';\n\n      return item;\n    });\n\n    // attacklab: strip sentinel\n    listStr = listStr.replace(/¨0/g, '');\n\n    globals.gListLevel--;\n\n    if (trimTrailing) {\n      listStr = listStr.replace(/\\s+$/, '');\n    }\n\n    return listStr;\n  }\n\n  /**\n   * Check and parse consecutive lists (better fix for issue #142)\n   * @param {string} list\n   * @param {string} listType\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function parseConsecutiveLists (list, listType, trimTrailing) {\n    // check if we caught 2 or more consecutive lists by mistake\n    // we use the counterRgx, meaning if listType is UL we look for OL and vice versa\n    var olRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?\\d+\\.[ \\t]/gm : /^ {0,3}\\d+\\.[ \\t]/gm,\n        ulRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?[*+-][ \\t]/gm : /^ {0,3}[*+-][ \\t]/gm,\n        counterRxg = (listType === 'ul') ? olRgx : ulRgx,\n        result = '';\n\n    if (list.search(counterRxg) !== -1) {\n      (function parseCL (txt) {\n        var pos = txt.search(counterRxg);\n        if (pos !== -1) {\n          // slice\n          result += '\\n<' + listType + '>\\n' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\n';\n\n          // invert counterType and listType\n          listType = (listType === 'ul') ? 'ol' : 'ul';\n          counterRxg = (listType === 'ul') ? olRgx : ulRgx;\n\n          //recurse\n          parseCL(txt.slice(pos));\n        } else {\n          result += '\\n<' + listType + '>\\n' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\n';\n        }\n      })(list);\n    } else {\n      result = '\\n<' + listType + '>\\n' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\n';\n    }\n\n    return result;\n  }\n\n  // add sentinel to hack around khtml/safari bug:\n  // http://bugs.webkit.org/show_bug.cgi?id=11231\n  text += '¨0';\n\n  if (globals.gListLevel) {\n    text = text.replace(/^(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, list, m2) {\n        var listType = (m2.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, true);\n      }\n    );\n  } else {\n    text = text.replace(/(\\n\\n|^\\n?)(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, m1, list, m3) {\n        var listType = (m3.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, false);\n      }\n    );\n  }\n\n  // strip sentinel\n  text = text.replace(/¨0/, '');\n  text = globals.converter._dispatch('lists.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Remove one level of line-leading tabs or spaces\n */\nshowdown.subParser('outdent', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('outdent.before', text, options, globals);\n\n  // attacklab: hack around Konqueror 3.5.4 bug:\n  // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n  text = text.replace(/^(\\t|[ ]{1,4})/gm, '¨0'); // attacklab: g_tab_width\n\n  // attacklab: clean up hack\n  text = text.replace(/¨0/g, '');\n\n  text = globals.converter._dispatch('outdent.after', text, options, globals);\n  return text;\n});\n\r\n/**\n *\n */\nshowdown.subParser('paragraphs', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('paragraphs.before', text, options, globals);\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n\n  var grafs = text.split(/\\n{2,}/g),\n      grafsOut = [],\n      end = grafs.length; // Wrap <p> tags\n\n  for (var i = 0; i < end; i++) {\n    var str = grafs[i];\n    // if this is an HTML marker, copy it\n    if (str.search(/¨(K|G)(\\d+)\\1/g) >= 0) {\n      grafsOut.push(str);\n\n    // test for presence of characters to prevent empty lines being parsed\n    // as paragraphs (resulting in undesired extra empty paragraphs)\n    } else if (str.search(/\\S/) >= 0) {\n      str = showdown.subParser('spanGamut')(str, options, globals);\n      str = str.replace(/^([ \\t]*)/g, '<p>');\n      str += '</p>';\n      grafsOut.push(str);\n    }\n  }\n\n  /** Unhashify HTML blocks */\n  end = grafsOut.length;\n  for (i = 0; i < end; i++) {\n    var blockText = '',\n        grafsOutIt = grafsOut[i],\n        codeFlag = false;\n    // if this is a marker for an html block...\n    // use RegExp.test instead of string.search because of QML bug\n    while (/¨(K|G)(\\d+)\\1/.test(grafsOutIt)) {\n      var delim = RegExp.$1,\n          num   = RegExp.$2;\n\n      if (delim === 'K') {\n        blockText = globals.gHtmlBlocks[num];\n      } else {\n        // we need to check if ghBlock is a false positive\n        if (codeFlag) {\n          // use encoded version of all text\n          blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text, options, globals);\n        } else {\n          blockText = globals.ghCodeBlocks[num].codeblock;\n        }\n      }\n      blockText = blockText.replace(/\\$/g, '$$$$'); // Escape any dollar signs\n\n      grafsOutIt = grafsOutIt.replace(/(\\n\\n)?¨(K|G)\\d+\\2(\\n\\n)?/, blockText);\n      // Check if grafsOutIt is a pre->code\n      if (/^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(grafsOutIt)) {\n        codeFlag = true;\n      }\n    }\n    grafsOut[i] = grafsOutIt;\n  }\n  text = grafsOut.join('\\n');\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n  return globals.converter._dispatch('paragraphs.after', text, options, globals);\n});\n\r\n/**\n * Run extension\n */\nshowdown.subParser('runExtension', function (ext, text, options, globals) {\n  'use strict';\n\n  if (ext.filter) {\n    text = ext.filter(text, globals.converter, options);\n\n  } else if (ext.regex) {\n    // TODO remove this when old extension loading mechanism is deprecated\n    var re = ext.regex;\n    if (!(re instanceof RegExp)) {\n      re = new RegExp(re, 'g');\n    }\n    text = text.replace(re, ext.replace);\n  }\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that occur *within* block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('spanGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('spanGamut.before', text, options, globals);\n  text = showdown.subParser('codeSpans')(text, options, globals);\n  text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);\n  text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);\n\n  // Process anchor and image tags. Images must come first,\n  // because ![foo][f] looks like an anchor.\n  text = showdown.subParser('images')(text, options, globals);\n  text = showdown.subParser('anchors')(text, options, globals);\n\n  // Make links out of things like `<http://example.com/>`\n  // Must come after _DoAnchors(), because you can use < and >\n  // delimiters in inline links like [this](<url>).\n  text = showdown.subParser('autoLinks')(text, options, globals);\n  text = showdown.subParser('italicsAndBold')(text, options, globals);\n  text = showdown.subParser('strikethrough')(text, options, globals);\n\n  // we need to hash HTML tags inside spans\n  text = showdown.subParser('hashHTMLSpans')(text, options, globals);\n\n  // now we encode amps and angles\n  text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);\n\n  // Do hard breaks\n  if (options.simpleLineBreaks) {\n    // GFM style hard breaks\n    text = text.replace(/\\n/g, '<br />\\n');\n  } else {\n    // Vanilla hard breaks\n    text = text.replace(/  +\\n/g, '<br />\\n');\n  }\n\n  text = globals.converter._dispatch('spanGamut.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('strikethrough', function (text, options, globals) {\n  'use strict';\n\n  if (options.strikethrough) {\n    text = globals.converter._dispatch('strikethrough.before', text, options, globals);\n    text = text.replace(/(?:~){2}([\\s\\S]+?)(?:~){2}/g, '<del>$1</del>');\n    text = globals.converter._dispatch('strikethrough.after', text, options, globals);\n  }\n\n  return text;\n});\n\r\n/**\n * Strips link definitions from text, stores the URLs and titles in\n * hash references.\n * Link defs are in the form: ^[id]: url \"optional title\"\n */\nshowdown.subParser('stripLinkDefinitions', function (text, options, globals) {\n  'use strict';\n\n  var regex = /^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=¨0))/gm;\n\n  // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '¨0';\n\n  text = text.replace(regex, function (wholeMatch, linkId, url, width, height, blankLines, title) {\n    linkId = linkId.toLowerCase();\n    globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url, options, globals);  // Link IDs are case-insensitive\n\n    if (blankLines) {\n      // Oops, found blank lines, so it's not a title.\n      // Put back the parenthetical statement we stole.\n      return blankLines + title;\n\n    } else {\n      if (title) {\n        globals.gTitles[linkId] = title.replace(/\"|'/g, '&quot;');\n      }\n      if (options.parseImgDimensions && width && height) {\n        globals.gDimensions[linkId] = {\n          width:  width,\n          height: height\n        };\n      }\n    }\n    // Completely remove the definition from the text\n    return '';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/¨0/, '');\n\n  return text;\n});\n\r\nshowdown.subParser('tables', function (text, options, globals) {\n  'use strict';\n\n  if (!options.tables) {\n    return text;\n  }\n\n  var tableRgx = /^ {0,3}\\|?.+\\|.+\\n[ \\t]{0,3}\\|?[ \\t]*:?[ \\t]*(?:-|=){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:-|=){2,}[\\s\\S]+?(?:\\n\\n|¨0)/gm;\n\n  function parseStyles (sLine) {\n    if (/^:[ \\t]*--*$/.test(sLine)) {\n      return ' style=\"text-align:left;\"';\n    } else if (/^--*[ \\t]*:[ \\t]*$/.test(sLine)) {\n      return ' style=\"text-align:right;\"';\n    } else if (/^:[ \\t]*--*[ \\t]*:$/.test(sLine)) {\n      return ' style=\"text-align:center;\"';\n    } else {\n      return '';\n    }\n  }\n\n  function parseHeaders (header, style) {\n    var id = '';\n    header = header.trim();\n    if (options.tableHeaderId) {\n      id = ' id=\"' + header.replace(/ /g, '_').toLowerCase() + '\"';\n    }\n    header = showdown.subParser('spanGamut')(header, options, globals);\n\n    return '<th' + id + style + '>' + header + '</th>\\n';\n  }\n\n  function parseCells (cell, style) {\n    var subText = showdown.subParser('spanGamut')(cell, options, globals);\n    return '<td' + style + '>' + subText + '</td>\\n';\n  }\n\n  function buildTable (headers, cells) {\n    var tb = '<table>\\n<thead>\\n<tr>\\n',\n        tblLgn = headers.length;\n\n    for (var i = 0; i < tblLgn; ++i) {\n      tb += headers[i];\n    }\n    tb += '</tr>\\n</thead>\\n<tbody>\\n';\n\n    for (i = 0; i < cells.length; ++i) {\n      tb += '<tr>\\n';\n      for (var ii = 0; ii < tblLgn; ++ii) {\n        tb += cells[i][ii];\n      }\n      tb += '</tr>\\n';\n    }\n    tb += '</tbody>\\n</table>\\n';\n    return tb;\n  }\n\n  text = globals.converter._dispatch('tables.before', text, options, globals);\n\n  text = text.replace(tableRgx, function (rawTable) {\n\n    var i, tableLines = rawTable.split('\\n');\n\n    // strip wrong first and last column if wrapped tables are used\n    for (i = 0; i < tableLines.length; ++i) {\n      if (/^ {0,3}\\|/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/^ {0,3}\\|/, '');\n      }\n      if (/\\|[ \\t]*$/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/\\|[ \\t]*$/, '');\n      }\n    }\n\n    var rawHeaders = tableLines[0].split('|').map(function (s) { return s.trim();}),\n        rawStyles = tableLines[1].split('|').map(function (s) { return s.trim();}),\n        rawCells = [],\n        headers = [],\n        styles = [],\n        cells = [];\n\n    tableLines.shift();\n    tableLines.shift();\n\n    for (i = 0; i < tableLines.length; ++i) {\n      if (tableLines[i].trim() === '') {\n        continue;\n      }\n      rawCells.push(\n        tableLines[i]\n          .split('|')\n          .map(function (s) {\n            return s.trim();\n          })\n      );\n    }\n\n    if (rawHeaders.length < rawStyles.length) {\n      return rawTable;\n    }\n\n    for (i = 0; i < rawStyles.length; ++i) {\n      styles.push(parseStyles(rawStyles[i]));\n    }\n\n    for (i = 0; i < rawHeaders.length; ++i) {\n      if (showdown.helper.isUndefined(styles[i])) {\n        styles[i] = '';\n      }\n      headers.push(parseHeaders(rawHeaders[i], styles[i]));\n    }\n\n    for (i = 0; i < rawCells.length; ++i) {\n      var row = [];\n      for (var ii = 0; ii < headers.length; ++ii) {\n        if (showdown.helper.isUndefined(rawCells[i][ii])) {\n\n        }\n        row.push(parseCells(rawCells[i][ii], styles[ii]));\n      }\n      cells.push(row);\n    }\n\n    return buildTable(headers, cells);\n  });\n\n  text = globals.converter._dispatch('tables.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * Swap back in all the special characters we've hidden.\n */\nshowdown.subParser('unescapeSpecialChars', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('unescapeSpecialChars.before', text, options, globals);\n\n  text = text.replace(/¨E(\\d+)E/g, function (wholeMatch, m1) {\n    var charCodeToReplace = parseInt(m1);\n    return String.fromCharCode(charCodeToReplace);\n  });\n\n  text = globals.converter._dispatch('unescapeSpecialChars.after', text, options, globals);\n  return text;\n});\n\r\nvar root = this;\n\n// CommonJS/nodeJS Loader\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = showdown;\n\n// AMD Loader\n} else if (typeof define === 'function' && define.amd) {\n  define(function () {\n    'use strict';\n    return showdown;\n  });\n\n// Regular Browser loader\n} else {\n  root.showdown = showdown;\n}\n}).call(this);\r\n\n//# sourceMappingURL=showdown.js.map\r\n"],"names":["getDefaultOpts","simple","defaultOptions","omitExtraWLInCodeBlocks","defaultValue","describe","type","noHeaderId","prefixHeaderId","ghCompatibleHeaderId","headerLevelStart","parseImgDimensions","simplifiedAutoLink","excludeTrailingPunctuationFromURLs","literalMidWordUnderscores","strikethrough","tables","tablesHeaderId","ghCodeBlocks","tasklists","smoothLivePreview","smartIndentationFix","description","disableForced4SpacesIndentedSublists","simpleLineBreaks","requireSpaceBeforeHeadingText","ghMentions","ghMentionsLink","encodeEmails","JSON","parse","stringify","ret","opt","hasOwnProperty","allOptionsOn","options","showdown","parsers","extensions","globalOptions","setFlavor","flavor","github","original","ghost","vanilla","allOn","validate","extension","name","errMsg","valid","error","helper","isArray","i","length","baseMsg","ext","isString","toLowerCase","isUndefined","listeners","filter","regex","ln","RegExp","replace","escapeCharactersCallback","wholeMatch","m1","charCodeToEscape","charCodeAt","setOption","key","value","this","getOption","getOptions","resetOptions","Error","preset","option","getFlavor","getFlavorOptions","getDefaultOptions","subParser","func","stdExtName","validExtension","getAllExtensions","removeExtension","resetExtensions","validateExtension","console","warn","a","String","isFunction","getType","toString","call","constructor","Array","forEach","obj","callback","prop","s","escapeCharacters","text","charsToEscape","afterBackslash","regexString","rgxFindMatchPos","str","left","right","flags","t","m","start","end","f","g","indexOf","x","l","pos","exec","test","lastIndex","index","match","push","matchRecursiveRegExp","matchPos","results","slice","replaceRecursiveRegExp","replacement","repStr","finalStr","lng","bits","join","encodeEmailAddress","mail","encode","ch","Math","floor","random","r","msg","alert","log","regexes","asteriskAndDash","Converter","converterOptions","langExtensions","outputModifiers","setConvFlavor","_constructor","gOpt","_parseExtension","legacyExtensionLoading","validExt","listen","rTrimInputText","rsp","rgx","_dispatch","evtName","globals","ei","nText","makeHtml","gHtmlBlocks","gHtmlMdBlocks","gHtmlSpans","gUrls","gTitles","gDimensions","gListLevel","hashLinkCounts","converter","addExtension","useExtension","extensionName","splice","ii","language","output","writeAnchorTag","m2","m3","m4","m5","m6","m7","linkText","linkId","url","title","search","result","wm","st","escape","mentions","username","lnk","simpleURLRegex","simpleURLRegex2","delimUrlRegex","simpleMailRegex","delimMailRegex","replaceLink","link","trailingPunctuation","lnkTxt","append","replaceMail","b","href","bq","pre","pattern","codeblock","nextChar","c","leadingText","numSpaces","repFunc","blockText","blockTags","txt","hashHTMLSpan","html","repText","limit","num","$1","isNaN","parseInt","ghHeaderId","setextRegexH1","setextRegexH2","spanGamut","hID","headerId","hLevel","hashBlock","matchFound","atxStyle","span","header","inlineRegExp","referenceRegExp","writeImageTag","altText","width","height","gDims","processListItems","listStr","trimTrailing","isParagraphed","taskbtn","checked","trim","item","bulletStyle","otp","wm2","parseConsecutiveLists","list","listType","olRgx","ulRgx","counterRxg","parseCL","grafs","split","grafsOut","grafsOutIt","codeFlag","delim","$2","re","blankLines","tableRgx","parseStyles","sLine","parseHeaders","style","id","tableHeaderId","parseCells","cell","subText","buildTable","headers","cells","tb","tblLgn","rawTable","tableLines","rawHeaders","map","rawStyles","rawCells","styles","shift","row","charCodeToReplace","fromCharCode","module","exports"],"sourceRoot":""}